plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "testmod"
version = "1.0.0"
group = "dhyces"

loom {
	mods {
		trimmed {
			sourceSet getRootProject().sourceSets.main
		}
		testmod {
			sourceSet sourceSets.main
		}
	}
	runs {
		testClient {
			inherit client
			name "TestClient"
			ideConfigGenerated = true
		}
		datagenClient {
			inherit client
			name "TestData"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=testmod"

			runDir "build/datagen"
			ideConfigGenerated = true
		}
	}
	
	accessWidenerPath = file("src/main/resources/trimmed.accesswidener")
}

sourceSets.main.resources.srcDirs("src/main/generated")

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation rootProject
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}