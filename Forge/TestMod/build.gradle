plugins {
	id 'net.minecraftforge.gradle' version '[6.0,6.2)'
	id 'org.parchmentmc.librarian.forgegradle' version '1.+'
	id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

archivesBaseName = "${mod_id}-TESTMOD-DO-NOT-PUBLISH-Forge-${minecraft_version}-${version}"

minecraft {
	mappings channel: "parchment", version: "${parchment_version}"

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		configureEach {
			workingDirectory "$rootDir/Forge/run"
			ideaModule "${rootProject.name}.Forge.${project.name}.main"
			property "mixin.config", "trimmed.mixin.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			mods {
				mod {
					source project(":Common").sourceSets.main
					source project(":Forge").sourceSets.main
				}
				testmod {
					source sourceSets.main
				}
			}
		}

		client {
			taskName 'TestClient'
		}

		server {
			taskName 'TestServer'
		}

		data {
			args '--mod', 'trimmed_testmod', 'chunked', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
			taskName 'TestData'
		}
	}
}

sourceSets.main.resources.srcDir "$rootDir/Forge/TestMod/src/generated/resources"

repositories {
	maven {
		url = "https://maven.dhyces.dev/"
	}
	maven {
		url = "https://jm.gserv.me/repository/maven-public/"
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

	implementation fg.deobf('mysticdrew:common-networking-forge:1.0.1-1.20.1')

	implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:0.2.0-beta.9"))
	implementation("com.github.llamalad7.mixinextras:mixinextras-forge:0.2.0-beta.9")

	compileOnly(project(":Common"))
	implementation(project(":Forge"))

	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

//	implementation "dev.dhyces.trimmed:trimmed-forge-1.19.4:0.0.1"
}

mixin {
	config "trimmed.mixins.json"
	config "trimmed.forge.mixins.json"

	debug.verbose = true
	debug.export = true
}

//tasks.withType(JavaCompile) {
//	source(project(":Common").sourceSets.main.allSource)
//	source(project(":Forge").sourceSets.main.allSource)
//}

jar.finalizedBy('reobfJar')