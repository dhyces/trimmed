plugins {
    id 'org.groovymc.modsdotgroovy' version '1.4.1'
}

modsDotGroovy {
    dslVersion = '1.5.0'
    platform = 'multiloader'
    multiloader {
        common = project(':Common')
//        quilt = [project(':Quilt')]
        forge = [project(':Forge')]
        fabric = [project(':Fabric')]
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    version = mod_version
        
    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {

        mavenCentral()
        mavenLocal()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        maven {
            url = "https://jm.gserv.me/repository/maven-public/"
        }

        maven { url = "https://jitpack.io/" }
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:24.0.0'
    }

    tasks.withType(JavaCompile).configureEach {
    
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    publishing {
        repositories {
            maven {
                name "Local"
                url "file://" + findProperty("local_maven")
            }
            maven {
                name "Maven"
                url findProperty("mavenUrl")
                credentials(PasswordCredentials) {
                    username = findProperty("mavenUsername")
                    password = findProperty("mavenPassword")
                }
            }
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/dhyces/trimmed")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }
            }
        }
    }
}
