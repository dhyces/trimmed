plugins {
    id 'java'
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_id}-fabric-${minecraft_version}"

loom {
    accessWidenerPath = project(":Common").file("src/main/resources/trimmed.accesswidener")

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }

    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }

    mods {
        trimmed {
            sourceSet sourceSets.main
            sourceSet project(":Common").sourceSets.main
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.07.02@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_version}") {
        exclude module: "fabric-models-v0"
    }

    include(implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:0.2.0-beta.9")))

    implementation project(path: ":Common", configuration: "namedElements")
}

idea {
    module {
        inheritOutputDirs = false
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

sourcesJar {
    from(project(":Common").sourceSets.main.allSource)
    exclude("mods.groovy")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.maven_group
            artifactId project.archivesBaseName
            version project.mod_version
            from components.java
            pom.withXml {
                asNode().remove(asNode().dependencies)
            }
        }
    }
}
